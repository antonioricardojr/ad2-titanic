filter(tracks_per_year, tracks_per_year$V1 == "1922");
filter(tracks_per_year, tracks_per_year$V1 == "1922");
filter(tracks_per_year, tracks_per_year$V1 == "1922");
filter(tracks_per_year, tracks_per_year$V1 == "1922");
filter(tracks_per_year, tracks_per_year$V1 == 1922);
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/.active-rstudio-document')
tracks_per_year <- read.csv("~/Dropbox/ad2/ad2-problema2/tracks_per_year.txt", header=FALSE, stringsAsFactors=FALSE)
View(tracks_per_year)
filter(tracks_per_year, tracks_per_yer$V1 == "1922")
filter(tracks_per_year, tracks_per_year$V1 == "1922")
filter(tracks_per_year, tracks_per_year$V4 == "1922")
filter(tracks_per_year, tracks_per_year$V4 == "Don't Pan Me")
?subset
subset(tracks_per_year, tracks_per_year$V1 == "1922")
subset(tracks_per_year, tracks_per_year$V1 == "1945")
subset(tracks_per_year, tracks_per_year$V1 == "2001")
dim(tracks_per_year)
?rcharts
??rcharts
?ggplot
??ggplot
tracks_per_year <- read.csv("~/Dropbox/ad2/ad2-problema2/tracks_per_year.txt", header=FALSE)
View(tracks_per_year)
ggplot(df)
clear
??ggplot
library("rCharts", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
as.data.frame(h)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
?cut
summary(tracks_per_year$V1)
tracks_per_year <- read.csv("~/Dropbox/ad2/ad2-problema2/tracks_per_year.txt", header=FALSE)
View(tracks_per_year)
summary(tracks_per_year)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
tracks_per_year <- read.csv("~/Dropbox/ad2/ad2-problema2/tracks_per_year.txt", header=FALSE)
View(tracks_per_year)
summary(tracks_per_year)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
tracks_per_year$decade
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/.active-rstudio-document')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
summary(tracks_per_year)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
as.numeric(tracks_per_year$V1)
edit(tracks_per_year)
tracks <- tracks_per_year[1:5000,]
as.numeric(tracks$V1)
as.integer(tracks$V1)
as.integer(head(tracks$V1))
head(tracks$V1)
as.numeric(levels(tracks$V1))[tracks$V1]
x <- as.numeric(levels(tracks$V1))[tracks$V1]
tracks$V1[is.na(x)]
subset(tracks, V1 == "Tension")
summary(x)
?count
??count
?count
??count
??rcharts
tracks_per_year_1922_1960 <- read.csv("~/Dropbox/ad2/ad2-problema2/dados/tracks_per_year/tracks_per_year_1922-1960.txt", quote="")
View(tracks_per_year_1922_1960)
f <- factor(tracks_per_year_1922_1960$track_artist)
artists <- levels(f)
artists
length(artists)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year_1922-1960.R')
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year_1922-1960.R')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year_1922-1960.R')
count_track_years
count_artists <- count(tracks_per_year_1922_1960, var="track_artist")
count_artists
count_track_years <- count(tracks_per_year_1922_1960, vars = "year")
count_track_years
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist")
count_artists
count_track_years <- count(tracks_per_year_1922_1960, vars = "year")
count_track_years
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
count_artists
?count
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist", "freq")
count_artists <- count(tracks_per_year_1922_1960, vars="year")
count_artists
count_artists <- count(tracks_per_year_1922_1960, vars="year", "track_artist")
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist")
count_artists
sum(count_artists$freq)
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist", "year")
count_artists
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist")
sum(count_artists$freq)
?sort
count_artists <- sort(count_artists)
sort(count_artists)
sort(count_artists)
sort(count_artists$freq)
sort(count_artists, count_artists$freq)
sort(count_artists, decreasing = TRUE, count_artists$freq)
sort(count_artists, decreasing = TRUE)
sort(count_artists, decreasing = TRUE, freq)
sort(count_artists, decreasing = TRUE, partial=count_artists$freq)
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist")
?typr
?type
typeof(count_artists)
df <- ldply (count_artists, data.frame)
df
df <- do.call(rbind.data.frame, count_artists)
df
df <- data.frame(Reduce(rbind, count_artists))
df <- data.frame(Reduce(rbind, count_artists))
df
df <- as.data.frame(count_artists)
df
d <- ggplot(data=df, aes(year,freq))+ geom_line(size=2)
d
d <- ggplot(data=df, aes(df$V1,freq))+ geom_line(size=2)
d
count_artists
count_artists <- count(tracks_per_year_1922_1960, vars="track_artist")
df <- as.data.frame(count_artists)
d <- ggplot(data=df, aes(track_artist,freq))+ geom_line(size=2)
d
View(df)
?arrange
arrange(df)
new_df <- df[order(freq)]
new_df <- df[order(df$freq)]
df[order(df$freq, decreasing=TRUE),]
View(df)
df <- df[order(df$freq, decreasing=TRUE),]
summary(df)
head(df)
d <- ggplot(data=df, aes(track_artist,freq))+ geom_line(size=2)
d
head_df <- head(df)
head_df
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_line(size=2)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=2)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_bar(size=2)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_bar()
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=4)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=freq)
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=head_df$freq)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=head_df$freq/10)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=head_df$freq/5)
d
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=head_df$freq/5) + geom_line()
d
?geom_bar
d <- ggplot(data=head_df, aes(track_artist,freq))+ geom_point(size=4)
d
View(df)
View(df)
df <- subset(df, select = c(track_artist,freq))
View(df)
df <- subset(df, select = -c(row.names))
df_most_productive <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist)
?merge
merge(tracks_per_year_1922_1960,head_df, by = intersect(names(tracks_per_year_1922_1960), names(head_df)),
tracks_per_year_1922_1960$track_artist = head_df$track_artist)
tracks_per_year_1922_1960$track_artist == head_df$track_artist)
merge(tracks_per_year_1922_1960,head_df, by = intersect(names(tracks_per_year_1922_1960), names(head_df)),
tracks_per_year_1922_1960$track_artist == head_df$track_artist)
merge(tracks_per_year_1922_1960,head_df, tracks_per_year_1922_1960$track_artist == head_df$track_artist)
?count
nrow(tracks_per_year_1922_1960, track_artist == "Julie London")
nrow(tracks_per_year_1922_1960)
df$row.names
summary(df)
summary(tracks_per_year_1922_1960)
head(tracks_per_year_1922_1960)
?summary
summary(tracks_per_year_1922_1960$track_artist)
summary(tracks_per_year_1922_1960$track_artist)
as.data.frame(summary(tracks_per_year_1922_1960$track_artist))
summary(tracks_per_year_1922_1960$track_artist, tracks_per_year_1922_1960$year)
summary(tracks_per_year_1922_1960)
subset(tracks_per_year_1922_1960, track_artist = summary(tracks_per_year_1922_1960)$track_artist)
df <- subset(tracks_per_year_1922_1960, track_artist = summary(tracks_per_year_1922_1960)$track_artist)
View(df)
summary(df)
df <- subset(tracks_per_year_1922_1960, track_artist = head(summary(tracks_per_year_1922_1960))$track_artist)
View(df)
head(summary(tracks_per_year_1922_1960))
df <- subset(tracks_per_year_1922_1960, track_artist = head(summary(tracks_per_year_1922_1960)$track_artist))
View(df)
summary(df)
df <- summary(tracks_per_year_1922_1960, track_artist > 50)
summary(tracks_per_year_1922_1960$track_artist)
order(summary(tracks_per_year_1922_1960$track_artist))
sort(summary(tracks_per_year_1922_1960$track_artist))
sort(summary(tracks_per_year_1922_1960$track_artist), decreasing=TRUE)
head(sort(summary(tracks_per_year_1922_1960$track_artist), decreasing=TRUE))
df <- head(sort(summary(tracks_per_year_1922_1960$track_artist), decreasing=TRUE))
df
View(df)
df[1]
df <- df[-1]
df
View(df)
df$row.names
df$names
row.names(df)
df
x <- row.names(df)
x
df <- head(sort(summary(artist = tracks_per_year_1922_1960$track_artist), decreasing=TRUE))
df <- head(sort(summary(tracks_per_year_1922_1960$track_artist), decreasing=TRUE))
View(df)
df <- df[-1] #removendo a linha (Other) 2036
View(df_most_productive)
View(head_df)
new_df <- subset(tracks_per_year_1922_1960, track_artist = head_df$track_artist)
View(new_df)
new_df <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist)
"a" == "a"
"1" == 1
"a" = "a"
new_df <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[1])
View(new_df)
df_julie <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[1])
df_elvis <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[2])
df_frank <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[3])
df_johnny <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[4])
df_tom <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[5])
df_thelonious <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artis
df_thelonious <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[6])
df_thelonious <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[6])
df_elvis
View(df_elvis)
d <- ggplot(data=df_elvis, aes(year,freq))+ geom_line(size=4)
d
d <- ggplot(data=df_elvis, aes(year,nrow(df_elvis)))+ geom_line(size=4)
d
d <- ggplot(data=df_elvis, aes(year,y)+ geom_line(size=4)
asdas
d <- ggplot(data=df_elvis, aes(year,y)+ geom_line(size=4)
sort(count_artists)
sum(count_artists$freq)
d <- ggplot(data=df_elvis, aes(year,y)+ geom_line(size=4))
d <- ggplot(data=df_elvis, aes(year,freq)+ geom_line(size=4))
d <- ggplot(data=df_elvis, aes(year,freq)+ geom_line()
count_tracks_years <- count(df_elvis, var="year")
count_tracks_years <- count(df_elvis, var="year")
d <- ggplot(data=df_elvis, aes(year,freq))+ geom_line(size=2)
d
count_tracks_years <- count(tracks_per_year_1960_1980, var="year")
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_line(size=2)
d
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
freq <- 1:length(df_elvis)
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
typeof(df_elvis)
df_elvis <- as.data.frame(df_elvis)
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
?aes
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year_1960-1980.R')
d60_80
typeof(tracks_per_year_1960_1980)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
tracks_per_year_1960.1980 <- read.csv("~/Dropbox/ad2/ad2-problema2/dados/tracks_per_year/tracks_per_year_1960-1980.txt", quote="")
View(tracks_per_year_1960.1980)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
tracks_per_year_1922.1960 <- read.csv("~/Dropbox/ad2/ad2-problema2/dados/tracks_per_year/tracks_per_year_1922-1960.txt", quote="")
View(tracks_per_year_1922.1960)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
tracks_per_year_1922.1960
tracks_per_year_1922_1960 <- read.csv("~/Dropbox/ad2/ad2-problema2/dados/tracks_per_year/tracks_per_year_1922-1960.txt", quote="")
View(tracks_per_year_1922_1960)
source('~/Dropbox/ad2/ad2-problema2/tracks_per_year.R')
df <- as.data.frame(count_artists)
df <- df[order(df$freq, decreasing=TRUE),]
head_df <- head(df)
df_julie <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[1])
df_elvis <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[2])
df_frank <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[3])
df_johnny <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[4])
df_tom <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[5])
df_thelonious <- subset(tracks_per_year_1922_1960, track_artist == head_df$track_artist[6])
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
d <- ggplot(data=df_tom, aes(year, freq)) + geom_point(size=2)
d
View(df_elvis)
d <- ggplot(data=df_tom, aes(year, track_artist)) + geom_point(size=2)
d
d <- ggplot(data=df_tom, aes(year, nrow(df_tom))) + geom_point(size=2)
d
d <- ggplot(data=df_tom, aes(year, freq)) + geom_point(size=2)
d
track_n <- 1:nrow(df_elvis)
years <- levels(factor(df_elvis$year))
count_track_years <- count(df_elvis, vars = "year")
d <- ggplot(data=df_elvis, aes(year, freq)) + geom_point(size=2)
d
??ggplot
View(df_elvis)
setwd('~/Dropbox/ad2/ad2-titanic')
train <- read.csv("train.csv")
test <- read.csv("test.csv")
# carregando pacotes decision tree plotting
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
# Recriando o modelo dos sobreviventes baseado no genero. Primeira impressão de árvores de decisão.
fit <- rpart(Survived ~ Sex, data=train, method="class")
fancyRpartPlot(fit)
# Contruindo uma árvore mais profunda e complexa. Agora consideramos mais variáveis como sexo, idade, etc.
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
# Plot it with base-R
plot(fit)
text(fit)
# Plot da árvore que melhor evidencia os resultados.
fancyRpartPlot(fit)
# Predição para submeter ao Kaggle.
Prediction <- predict(fit, test, type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "myfirstdtree.csv", row.names = FALSE)
View(submit)
install.packages("rmarkdown")
install.packages("rmarkdown")
setwd("~/Dropbox/ad2/ad2-titanic")
train <- read.csv("train.csv")
summary(train)
test <- read.csv("test.csv")
summary(test)
View(test)
View(test)
?rpart
??rpart
summary(prop(train$Sex))
prop.table(train$Sex))
prop.table(train$Sex)
summary(train$Sex)
prop.table(table(train$Sex, train$Survived))
prop.table(table(train$Sex, train$Survived), 1)
prop.table(table(train$Sex, train$Survived), 1)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
fancyRpartPlot(fit)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
fit2 ;' rpart(Survived ~ Sex + Class + Age, data=train, method="class")
fit2 <- rpart(Survived ~ Sex + Class + Age, data=train, method="class")
fit2 <- rpart(Survived ~ Sex + Class + Age, data=train, method="class")
fit2 <- rpart(Survived ~ Sex + Age, data=train, method="class")
fit2 <- rpart(Survived ~ Sex + Pclass + Age, data=train, method="class")
fancyRpartPlot(fit2)
fit <- rpart(Survived ~ Pclass + Fare, data=train, method="class")
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Fare + Pclass, data=train, method="class")
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Fare + Pclass, data=train, method="class")
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Fare + Pclass, data=train, method="anova")
fancyRpartPlot(fit)
summary(combi$Age)
test$Survived <- NA
combi <- rbind(train, test)
View(combi)
# Convert to a string
combi$Name <- as.character(combi$Name)
# Engineered variable: Title
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
# Combine small title groups
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
# Convert to a factor
combi$Title <- factor(combi$Title)
# Engineered variable: Family size
combi$FamilySize <- combi$SibSp + combi$Parch + 1
# Engineered variable: Family
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
View(combi)
combi$FamilyID2 <- factor(combi$FamilyID2)
combi$FamilyID2 <- factor(combi$FamilyID2)
combi$FamilyID2 <- factor(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
# And convert back to factor
combi$FamilyID2 <- factor(combi$FamilyID2)
# Split back into test and train sets
train <- combi[1:891,]
test <- combi[892:1309,]
# Build Random Forest Ensemble
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
library(randomForest)
install.packages('randomForest')
library(randomForest)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
# Trevor Stephens - 18 Jan 2014
# Full guide available at http://trevorstephens.com/
# Set working directory and import datafiles
setwd("~/Kaggle/Titanic")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
# Install and load required packages for decision trees and forests
library(rpart)
install.packages('randomForest')
library(randomForest)
install.packages('party')
install.packages("randomForest")
install.packages('party')
library(party)
# Join together the test and train sets for easier feature engineering
test$Survived <- NA
combi <- rbind(train, test)
# Convert to a string
combi$Name <- as.character(combi$Name)
# Engineered variable: Title
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
# Combine small title groups
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
# Convert to a factor
combi$Title <- factor(combi$Title)
# Engineered variable: Family size
combi$FamilySize <- combi$SibSp + combi$Parch + 1
# Engineered variable: Family
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
# Delete erroneous family IDs
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
# Convert to a factor
combi$FamilyID <- factor(combi$FamilyID)
# Fill in Age NAs
summary(combi$Age)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
# Check what else might be missing
summary(combi)
# Fill in Embarked blanks
summary(combi$Embarked)
which(combi$Embarked == '')
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
# Fill in Fare NAs
summary(combi$Fare)
which(is.na(combi$Fare))
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
# New factor for Random Forests, only allowed <32 levels, so reduce number
combi$FamilyID2 <- combi$FamilyID
# Convert back to string
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
# And convert back to factor
combi$FamilyID2 <- factor(combi$FamilyID2)
# Split back into test and train sets
train <- combi[1:891,]
test <- combi[892:1309,]
# Build Random Forest Ensemble
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
# Look at variable importance
varImpPlot(fit)
# Now let's make a prediction and write a submission file
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
# Build condition inference tree Random Forest
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data = train, controls=cforest_unbiased(ntree=2000, mtry=3))
# Now let's make a prediction and write a submission file
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "ciforest.csv", row.names = FALSE)
